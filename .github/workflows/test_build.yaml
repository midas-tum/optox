name: optox-build
on: [push,pull_request]
jobs:
  run:
    runs-on: [self-hosted,Linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # may need to setup NodeJS & Python3 on e.g. self-hosted
      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '12'
      # - uses: actions/setup-python@v2
      #   with:
      #     python-version: '3.x'
      - name: Init environment
        run: |
          # Your ML workflow goes here
          python3 -m venv optoxenv
          source ~/actions-runner-optox/_work/optox_dev/optox_dev/optoxenv/bin/activate
          pip install --upgrade pip   # update pip to install TF>2.0
      - name: Build optox
        env:
          CUDA_ROOT_DIR: /usr/local/cuda
          CUDA_SDK_ROOT_DIR: /usr/local/cuda-samples
          LDFLAGS: -L/usr/local/cuda/lib64
        run: |
          # Your ML workflow goes here
          #python3 -m venv optoxenv
          cd ~/actions-runner-optox/_work/optox_dev/optox_dev
          source ~/actions-runner-optox/_work/optox_dev/optox_dev/optoxenv/bin/activate
          pip install -r requirements.txt
          mkdir build
          cd build
          cmake .. -DWITH_PYTHON=ON -DWITH_PYTORCH=ON -DWITH_TENSORFLOW=ON -DCUDA_SDK_ROOT_DIR=/usr/local/cuda-samples -DCUDA_ROOT=/usr/local/cuda/
          make install
          cd ..
      - name: Check install
        run: |
          #python3 -m venv optoxenv
          source ~/actions-runner-optox/_work/optox_dev/optox_dev/optoxenv/bin/activate
          pip list
      - name: Run python unittests
        run: |
          source ~/actions-runner-optox/_work/optox_dev/optox_dev/optoxenv/bin/activate
          python3 -m unittest discover -v optopy.test >> results_py.txt
      - name: Run pytorch unittests
        run: |
          source ~/actions-runner-optox/_work/optox_dev/optox_dev/optoxenv/bin/activate
          python3 -m unittest discover -v optoth.test >> results_th.txt
      - name: Run tensorflow unittests
        run: |
          source ~/actions-runner-optox/_work/optox_dev/optox_dev/optoxenv/bin/activate
          export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/local/cuda/lib64
          python3 -m unittest discover -v optotf.test >> results_tf.txt
      - name: Publish Results
        run: |
           cat results_py.txt results_tf.txt results_th.txt >> report.md
           cat report.md
      #- name: Publish Unit Test Results
      #  uses: EnricoMi/publish-unit-test-result-action@v1
      #  if: always()
      #  with:
      #    files: test-results/**/*.xml
      - name: Cleanup
        run: |
          rm -r ~/actions-runner-optox/_work/optox_dev/optox_dev/build
          rm -r ~/actions-runner-optox/_work/optox_dev/optox_dev/optoxenv
